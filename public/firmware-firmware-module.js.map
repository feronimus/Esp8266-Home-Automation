{"version":3,"sources":["webpack:///./src/app/pages/firmware/firmware-insert/firmware-insert.component.html","webpack:///./src/app/pages/firmware/firmware-insert/firmware-insert.component.scss","webpack:///./src/app/pages/firmware/firmware-insert/firmware-insert.component.ts","webpack:///./src/app/pages/firmware/firmware-manage/firmware-manage.component.html","webpack:///./src/app/pages/firmware/firmware-manage/firmware-manage.component.ts","webpack:///./src/app/pages/firmware/firmware-routing.module.ts","webpack:///./src/app/pages/firmware/firmware.component.ts","webpack:///./src/app/pages/firmware/firmware.module.ts"],"names":[],"mappings":"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","file":"firmware-firmware-module.js","sourcesContent":["module.exports = \"<nb-card>\\n    <nb-card-header>{{HtmlMessages.CardDeviceHeader}}</nb-card-header>\\n    <nb-card-body>\\n        <nb-alert *ngIf=\\\"errors?.length \\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n            <p class=\\\"alert-title\\\"><b>Attention!</b></p>\\n            <ul class=\\\"alert-message-list\\\">\\n              <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n            </ul>\\n          </nb-alert>\\n          \\n          <nb-alert *ngIf=\\\"messages?.length \\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n            <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n            <ul class=\\\"alert-message-list\\\">\\n              <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n            </ul>\\n          </nb-alert>\\n\\n          \\n      <form >\\n        <div class=\\\"form-group row\\\">\\n          <label for=\\\"inputName\\\" class=\\\"col-sm-3 col-form-label\\\">Name</label>\\n          <div class=\\\"col-sm-9\\\">\\n              <div class=\\\"input-group\\\">\\n                  <input type=\\\"name\\\" [(ngModel)]=\\\"name\\\" class=\\\"form-control\\\" id=\\\"inputName\\\"  name=\\\"name\\\"placeholder=\\\"Enter Name\\\"/>\\n              </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group row\\\">\\n            <label for=\\\"inputDescription\\\" class=\\\"col-sm-3 col-form-label\\\">Description</label>\\n            <div class=\\\"col-sm-9\\\">\\n              <ckeditor [config]=\\\"{ extraPlugins: 'divarea', height: '100' }\\\" id=\\\"inputDescription\\\" name=\\\"description\\\" [(ngModel)]=\\\"description\\\" fullWidth ></ckeditor> \\n            </div>\\n          </div>\\n\\n      \\n\\n        <!-- Insert upload component-->\\n       \\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"inputLink\\\" class=\\\"col-sm-3 col-form-label\\\">Link</label>\\n            <div class=\\\"col-sm-9\\\">\\n                <div class=\\\"input-group\\\">\\n                    <span class=\\\"input-group-addon success\\\">@</span>\\n                    <input type=\\\"link\\\" [(ngModel)]=\\\"link\\\" class=\\\"form-control\\\" id=\\\"inputLink\\\"  name=\\\"link\\\" placeholder=\\\"Enter uploaded Link\\\"/>\\n                </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n              <label for=\\\"group\\\" class=\\\"col-sm-3 col-form-label\\\">Category</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <input id=\\\"group\\\" type=\\\"group\\\" class=\\\"form-control\\\" name=\\\"group\\\" [(ngModel)]=\\\"group\\\" [ngbTypeahead]=\\\"searchCategory\\\" placeholder=\\\"In what Category your code will be showing?\\\"/>\\n                  </div>\\n                </div>\\n          </div>\\n\\n\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"device\\\" class=\\\"col-sm-3 col-form-label\\\">Device</label>\\n              <div class=\\\"col-sm-9\\\">\\n                <div class=\\\"input-group\\\">\\n                  <input id=\\\"device\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"device\\\" [(ngModel)]=\\\"device\\\" [ngbTypeahead]=\\\"searchDevice\\\" placeholder=\\\"Device that this code wil work\\\"/>\\n                </div>\\n              </div>\\n          </div>\\n          \\n        \\n          <div class=\\\"form-group row\\\">\\n              <label for=\\\"inputVersion\\\" class=\\\"col-sm-3 col-form-label\\\">Version</label>\\n              <div class=\\\"col-sm-9\\\">\\n                <div class=\\\"input-group\\\">\\n                  <span class=\\\"input-group-append\\\">\\n                    <input type=\\\"number\\\" min=\\\"0\\\" [(ngModel)]=\\\"version.main\\\" class=\\\"form-control\\\"  name=\\\"versionMain\\\" placeholder=\\\"Main\\\">\\n                    <input type=\\\"number\\\"  min=\\\"0\\\"[(ngModel)]=\\\"version.secondary\\\" class=\\\"form-control\\\"  name=\\\"versionSecondary\\\" placeholder=\\\"Secondary\\\">          \\n                  </span>\\n                </div>\\n              </div>\\n            </div>\\n\\n        <div class=\\\"form-group row\\\">\\n          <label class=\\\"col-sm-3\\\">Options</label>\\n          <div class=\\\"col-sm-9\\\">\\n            <div class=\\\"form-check\\\">\\n                <nb-checkbox [(ngModel)]=\\\"isPublic\\\" name=\\\"checkbox\\\" status=\\\"warning\\\">\\n                  Make it Public.\\n                </nb-checkbox>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n            \\n            </div>\\n          </div>\\n        </div> \\n\\n        <br>\\n        <br>\\n\\n        <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-sm-3\\\">Buttons</label>\\n            <div class=\\\"col-sm-9\\\">\\n                <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"source\\\" (custom)=\\\"ManageDevice($event)\\\" (deleteConfirm)=\\\"onDeleteConfirm($event)\\\">\\n                  </ng2-smart-table>    \\n              <div class=\\\"form-group row\\\">              \\n              </div>\\n            </div>\\n          </div> \\n\\n        \\n        <br>\\n        <br>\\n        <br>\\n        <br>\\n        \\n        <div class=\\\"form-group row\\\">\\n            <label for=\\\"code\\\" class=\\\"col-sm-3 col-form-label\\\">Code</label>\\n            <div class=\\\"col-sm-9\\\">  \\n              <ckeditor [config]=\\\"{ extraPlugins: 'divarea', height: '320' }\\\" id=\\\"code\\\" name=\\\"code\\\" [(ngModel)]=\\\"code\\\" fullWidth ></ckeditor> \\n           \\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n              <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\" >{{HtmlMessages.ButtonSubmit}}</button>\\n                </div>              \\n            </div>\\n      </form>\\n    </nb-card-body>\\n  </nb-card>\\n\\n \\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2Zpcm13YXJlL2Zpcm13YXJlLWluc2VydC9maXJtd2FyZS1pbnNlcnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {BackendService} from '../../services/backend.service';\nimport {ValidationService } from '../../services/validation.service';\nimport {  NbAuthService } from '@nebular/auth';\nimport { Observable } from 'rxjs';\nimport {debounceTime, distinctUntilChanged, map} from 'rxjs/operators';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { group } from '@angular/animations';\nimport '../../editors/ckeditor/ckeditor.loader';\nimport 'ckeditor';\n\n\n\nexport  interface  Firm  {\n  name: String;\n  description: String;\n  version: { main:Number , secondary: Number};\n  isPublic: Boolean;\n  link: String;\n  group: String;\n  device: String;\n  code: String;\n  ownerName: String;\n  owner: String;\n  buttons: [{ messageOn: String,  messageOff: String , icon: String, buttonType: String}];\n  Sliders: [{ Name: String, message: String , value : Number }];\n};\n\n\n@Component({\n  selector: 'ngx-firmware-insert',\n  templateUrl: './firmware-insert.component.html',\n  styleUrls: ['./firmware-insert.component.scss']\n})\nexport class FirmwareInsertComponent implements OnInit {\n\n\n  \n   //Fields Firmware\n   newFirmware= <Firm>{ };\n   UpdatedFirmware : any;\n   name= \"\";\n   description= \"\";\n   version= { main:0 , secondary: 0};\n   isPublic= true;\n   link= \"\";\n   group= \"\";\n   device= \"\";\n   code= \"\";\n   owner: any;\n   buttons= [{Name: \"\", message: \"\" }];\n   Sliders= [{ Name: String, message: String , value : Number }];;\n   \n\n   //Messages\n   errors: string[] = [];\n    messages: string[] = [];\n \n\n  //Cashed\n  GroupList;\n  GroupArray = [];\n  DeviceList;  \n  DeviceArray = [];\n  //UserID;\n  // New Firware\n   FocusedID: any;\n   firms =[];\n   FocusedFirmwares: any;  \n   source: LocalDataSource = new LocalDataSource();\n \n   isNew = true;\n   HtmlMessages = {\n     CardDeviceHeader : \"\",\n     ButtonSubmit: \"\",\n   };\n   colorTypes = [\n    { value: 'primary', title: 'primary' },\n    { value: 'warning', title: 'warning' }, \n    { value: 'success', title: 'success'},\n    { value: 'info', title: 'info'},\n    { value: 'danger', title: 'danger'},\n    { value: 'ghost', title: 'ghost'},\n  \n  ];\n\n  constructor(\n    private service:BackendService,\n    private validationService:ValidationService,\n    private authService: NbAuthService\n    ) {}\n\n\n  ngOnInit() {    \n\n    //Get Focused ID of Firmware and load it \n    this.FocusedID  = this.service.FocusedFirmwareID;\n    if(!(this.FocusedID == undefined) && !(this.FocusedID == \"\") ) this.isNew= false;    \n    if(!this.isNew) this.handleChange();\n    else this.handleHtmlChange(); \n    \n    //Load Cashed data from the server\n    this.LoadLists();\n   \n    \n  }\n  handleChange(){\n    this.service.getFirmwareByUser().subscribe(firm => {        \n      firm.firmware.forEach(element => {\n        this.firms.push(element);\n        if(this.FocusedID == element._id) this.FocusedFirmwares = element;        \n      });\n\n      this.name = this.FocusedFirmwares.name;\n      this.description = this.FocusedFirmwares.description;\n      this.link = this.FocusedFirmwares.link;\n      this.group = this.FocusedFirmwares.group;\n      this.device = this.FocusedFirmwares.device;\n      this.version = this.FocusedFirmwares.version;\n      this.isPublic = this.FocusedFirmwares.isPublic;\n      this.code = this.FocusedFirmwares.code;\n      this.source.load(this.FocusedFirmwares.buttons);\n      /*\n      this.FocusedFirmwares.buttons.forEach(element => {   \n        console.log(element)  ;  \n        this.source.add(element);\n      });\n      */\n      console.log(this.source)  ; \n      this.handleHtmlChange();\n    });\n  }\n  handleHtmlChange(){\n  \n    if(this.isNew){\n      this.HtmlMessages.CardDeviceHeader = \"Insert a New Firmware!\";\n      this.HtmlMessages.ButtonSubmit = \"Save This Firmware\";\n    }else{\n      this.HtmlMessages.CardDeviceHeader = \"Update Firmware \" + this.FocusedFirmwares.name;\n      this.HtmlMessages.ButtonSubmit = \"Update Firmware\";\n    }   \n  }\n   \n\n  CreateNewFirmware(){\n  this.newFirmware.name =  this.name;\n  this.newFirmware.description = this.description;\n  this.newFirmware.version = { main: this.version.main , secondary: this.version.secondary};\n  this.newFirmware.isPublic = this.isPublic;\n  this.newFirmware.link =this.link;\n  this.newFirmware.group =this.group;\n  this.newFirmware.device =this.device;\n  this.newFirmware.code = this.code;\n  this.newFirmware.owner = this.GetUserID();\n\n  this.newFirmware.buttons = [{\n    messageOn: \"test\",\n    messageOff: \"test\",\n    icon: \"test\",\n    buttonType: \"test\",\n  }];\n  this.newFirmware.buttons.shift();\n  this.source.getAll().then(dat =>{      \n    if(dat) {\n      dat.forEach(element => {\n          let temp = {\n            messageOn: element.messageOn, \n            messageOff: element.messageOff , \n            icon: element.icon, \n            buttonType: element.type\n        };\n        this.newFirmware.buttons.push(temp);\n      });\n    }\n  });    \n  }\n\n  UpdateFirmware(){\n    this.UpdatedFirmware =  this.FocusedFirmwares;\n    this.UpdatedFirmware.name =  this.name;\n    this.UpdatedFirmware.description = this.description;\n    this.UpdatedFirmware.version = { main: this.version.main , secondary: this.version.secondary};\n    this.UpdatedFirmware.isPublic = this.isPublic;\n    this.UpdatedFirmware.link =this.link;\n    this.UpdatedFirmware.group =this.group;\n    this.UpdatedFirmware.device =this.device;\n    this.UpdatedFirmware.code = this.code;\n    this.UpdatedFirmware.owner = this.GetUserID();\n  \n    this.UpdatedFirmware.buttons = [{\n      messageOn: \"test\",\n      messageOff: \"test\",\n      icon: \"test\",\n      buttonType: \"test\",\n    }];\n    this.UpdatedFirmware.buttons.shift();\n    this.source.getAll().then(dat =>{      \n      if(dat) {\n        dat.forEach(element => {\n            let temp = {\n              messageOn: element.messageOn, \n              messageOff: element.messageOff , \n              icon: element.icon, \n              buttonType: element.type\n          };\n          this.UpdatedFirmware.buttons.push(temp);\n        });\n      }\n    });    \n    }\n\n  ClearMessages(){\n    this.errors = [];\n    this.messages = [];\n  }\n\n  GetUserID(){\n    let token: any;\n    token=  this.authService.getToken();    \n    return  token.value.payload.user.id;\n  }\n\n  LoadLists(){\n    //load groups\n    this.service.getFirmwareGroups({_id: this.GetUserID()}).subscribe(groups => { \n      this.GroupArray = [];\n      this.DeviceArray = [{}];  \n      this.GroupArray = groups.groups;\n      this.service.getDevices().subscribe(devices => {    \n        this.DeviceArray = devices.devices;      \n      });\n    });\n  }\n  \n  searchCategory = (text$: Observable<string>) =>\n    text$.pipe(\n      debounceTime(200),\n      distinctUntilChanged(),\n      map(term => term.length < 2 ? []\n        : this.GroupArray.filter(v => v.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\n    )\n\n\n    searchDevice = (text$: Observable<string>) =>\n    text$.pipe(\n      debounceTime(200),\n      distinctUntilChanged(),\n      map(term => term.length < 2 ? []\n        : this.DeviceArray.filter(v => v.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\n    )\n\n    onSubmit() {\n      this.messages = [];\n      this.errors = [];\n      if(this.isNew) {\n        this.handleSumbitNew();\n      }\n      else {\n        this.handleSumbitOld();\n      }\n    }\n\n\n    async  handleSumbitNew(){  \n      await this.CreateNewFirmware();       \n      if(!this.validationService.validateRegisterFirmware(this.newFirmware)) {\n        this.errors = this.validationService.pickErrorsRegisterFirmware(this.newFirmware);\n        return; \n      }        \n      this.service.registerFirmware(this.newFirmware).subscribe( (msg) => {\n        if(msg.success) this.messages.push(msg.msg);\n        else this.errors.push(msg.msg);\n      },\n      err => {\n        this.errors.push(err);\n        //console.log(err);\n        return false;\n      });\n    }\n\n    async  handleSumbitOld(){  \n      await this.UpdateFirmware();         \n      if(!this.validationService.validateRegisterFirmware(this.UpdatedFirmware)) {\n        this.errors = this.validationService.pickErrorsRegisterFirmware(this.UpdatedFirmware);\n        return; \n      }         \n      this.service.updateFirmware(this.UpdatedFirmware).subscribe( (msg) => {\n        if(msg.success) this.messages.push(msg.msg);\n        else this.errors.push(msg.msg);\n      },\n      err => {\n        this.errors.push(err);\n        //console.log(err);\n        return false;\n      });\n    }\n\n\n\n    onDeleteConfirm(event): void {\n      if (window.confirm('Are you sure you want to delete?')) {\n        event.confirm.resolve();\n      } else {\n        event.confirm.reject();\n      }\n    }\n    \n\n    \n\n    settings = {\n      add: {\n        addButtonContent: '<i class=\"nb-plus\"></i>',\n        createButtonContent: '<i class=\"nb-checkmark\"></i>',\n        cancelButtonContent: '<i class=\"nb-close\"></i>',\n      },\n      edit: {\n        editButtonContent: '<i class=\"nb-edit\"></i>',\n        saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n        cancelButtonContent: '<i class=\"nb-close\"></i>',\n      },\n      delete: {\n        deleteButtonContent: '<i class=\"nb-trash\"></i>',\n        confirmDelete: true,\n      },\n      columns: {\n        messageOn: {\n          title: 'Message At On',\n          type: 'string',\n        },\n        messageOff: {\n          title: 'Message At Off',\n          type: 'string',\n        },\n        icon: {\n          title: 'Icon #',\n          type: 'string',\n        },\n        type: {\n          title: 'Color type',\n          type: 'html', \n          editor: {\n            type: 'list',\n            config: { \n              list:this.colorTypes,\n              \n            }, \n           },\n          }, \n      }\n    }\n}\n","module.exports = \"<nb-card>\\n  <nb-card-header>\\n      <div class=\\\"container-btn\\\">\\n        Manage your Firmwares      \\n        <button class=\\\"btn-primary\\\" nbButton hero (click)=\\\"NewFirmware()\\\">New Firmware</button>\\n    </div>\\n  </nb-card-header>\\n\\n  <nb-card-body>\\n    <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"source\\\" (custom)=\\\"ManageFirmware($event)\\\" (deleteConfirm)=\\\"onDeleteConfirm($event)\\\">\\n    </ng2-smart-table>\\n  </nb-card-body>\\n</nb-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport {BackendService} from '../../services/backend.service';\nimport {  Router } from '@angular/router';\n\n\n@Component({\n  selector: 'ngx-firmware-manage',\n  templateUrl: './firmware-manage.component.html',\n  styles: [`\n  nb-card {\n    transform: translate3d(0, 0, 0);\n  }\n`],\n})\nexport class FirmwareManageComponent  {\n\n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(\n    private service: BackendService,\n    private router : Router,\n    ) {\n    this.service.getFirmwareByUser().subscribe(firms => {\n        this.source.load(firms.firmware); \n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n    \n  }\n\n  settings = {\n    hideSubHeader: true,\n    actions: {\n      add: false,\n      delete : false,\n      edit:false,\n      position: \"right\",\n      custom: [\n        { \n          name: 'Edit item',\n           title: '<i class=\"ion-forward\"></i>',\n        },       \n      ],         \n      },\n    add: {\n      addButtonContent: '<i class=\"nb-plus\"></i>',\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    edit: {\n      editButtonContent: '<i class=\"nb-edit\"></i>',\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\n      confirmDelete: true,\n    },\n    columns: {\n      name: {\n        title: 'Name',\n        type: 'string',\n      },      \n      versionReadable: {\n        title: 'Version',\n        type: 'string',\n      },      \n      isPublic: {\n        title: 'Public',\n      },\n      group: {\n        title: 'Category',\n        type: 'string',\n      },\n      device: {\n        title: 'Device',\n        type: 'string',\n      }\n  },\n    \n  };\n\n\n  NewFirmware(){   \n    this.service.FocusedDeviceID =\"\";\n     this.router.navigate(['/pages/firmware/input']);\n  }\n\n  ManageFirmware($event){\n    this.service.FocusedFirmwareID =$event.data._id;\n    this.router.navigate(['/pages/firmware/input']);\n  }\n\nonDeleteConfirm(event): void {\n    if (window.confirm('Are you sure you want to delete?')) {\n      event.confirm.resolve();\n    } else {\n      event.confirm.reject();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport {FirmwareComponent} from './firmware.component';\r\nimport { FirmwareInsertComponent } from './firmware-insert/firmware-insert.component';\r\nimport { FirmwareManageComponent } from './firmware-manage/firmware-manage.component';\r\n\r\n\r\n\r\nconst routes: Routes = [{\r\n    path: '',\r\n  component: FirmwareComponent,\r\n  children: [\r\n    {\r\n      path: 'input',\r\n      component: FirmwareInsertComponent,\r\n    },\r\n    {\r\n      path: 'manage',\r\n      component: FirmwareManageComponent,\r\n    },\r\n  ],\r\n}];\r\n  \r\n  @NgModule({\r\n    imports: [\r\n      RouterModule.forChild(routes),\r\n    ],\r\n    exports: [\r\n      RouterModule,\r\n    ],\r\n  })\r\n  export class FirmwareRoutingModule {\r\n  \r\n  }\r\n  \r\n  export const routedComponents = [\r\n    FirmwareComponent,\r\n    FirmwareInsertComponent,\r\n    FirmwareManageComponent,\r\n  ];","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-firmware',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n})\nexport class FirmwareComponent  {\n\n}\n","import { NgModule } from '@angular/core';\nimport { FirmwareRoutingModule} from './firmware-routing.module';\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\nimport {BackendService} from '../services/backend.service';\nimport { ThemeModule } from '../../@theme/theme.module';\nimport { FirmwareComponent } from './firmware.component';\nimport { CKEditorModule } from 'ng2-ckeditor';\nimport { FirmwareInsertComponent } from './firmware-insert/firmware-insert.component';\nimport { FirmwareManageComponent } from './firmware-manage/firmware-manage.component';\n\n@NgModule({\n  declarations: [FirmwareComponent, FirmwareInsertComponent, FirmwareManageComponent],\n  imports: [\n    FirmwareRoutingModule,\n    Ng2SmartTableModule,\n    ThemeModule,\n    CKEditorModule,\n  ],\n  providers: [BackendService],\n})\nexport class FirmwareModule { }\n"],"sourceRoot":""}